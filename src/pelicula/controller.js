import { ObjectId } from 'mongodb';
import client from '../common/dbconn.js'; 
import { Pelicula } from './pelicula.js';  

const peliculaCollection = client.db('vivero').collection('peliculas');  

async function handleInsertPeliculaRequest(req, res) {
    let data = req.body;
    let pelicula = new Pelicula();
    
    // Asignando los valores al objeto pelicula
    pelicula.titulo = data.titulo;
    pelicula.director = data.director;
    pelicula.anioEstreno = data.anioEstreno;
    pelicula.genero = data.genero;
    pelicula.duracionMinutos = data.duracionMinutos;
    
    // Insertar la película en la colección
    await peliculaCollection.insertOne(pelicula)
        .then((data) => {
            if (data === null) {
                return res.status(400).send('Error al guardar registro');
            }
            return res.status(201).send(data);
        })
        .catch((e) => {
            return res.status(500).send({ error: e });
        });
}

async function handleGetPeliculasRequest(req, res) {
    await peliculaCollection.find({}).toArray()
        .then((data) => {
            return res.status(200).send(data);
        })
        .catch((e) => {
            return res.status(500).send({ error: e });
        });
}

async function handleGetPeliculaByIdRequest(req, res) {
    let id = req.params.id;
    try {
        let oid = ObjectId.createFromHexString(id);
        await peliculaCollection.findOne({ _id: oid })
            .then((data) => {
                if (data === null) return res.status(404).send('Pelicula no encontrada');
                return res.status(200).send(data);
            })
            .catch((e) => {
                return res.status(500).send({ error: e });
            });
    } catch (e) {
        return res.status(400).send('ID mal formado');
    }
}

async function handleUpdatePeliculaByIdRequest(req, res) {
    let id = req.params.id;
    let pelicula = req.body;
    
    try {
        let oid = ObjectId.createFromHexString(id);
        let query = { $set: pelicula };  // Usando el operador $set para actualizar

        await peliculaCollection.updateOne({ _id: oid }, query)
            .then((data) => {
                return res.status(200).send(data);
            })
            .catch((e) => {
                return res.status(500).send({ error: e });
            });
    } catch (e) {
        return res.status(400).send('ID mal formado');
    }
}

async function handleDeletePeliculaByIdRequest(req, res) {
    let id = req.params.id;
    
    try {
        let oid = ObjectId.createFromHexString(id);
        await peliculaCollection.deleteOne({ _id: oid })
            .then((data) => {
                return res.status(200).send(data);
            })
            .catch((e) => {
                return res.status(500).send({ error: e });
            });
    } catch (e) {
        return res.status(400).send('ID mal formado');
    }
}

export default {
    handleInsertPeliculaRequest,
    handleGetPeliculasRequest,
    handleGetPeliculaByIdRequest,
    handleUpdatePeliculaByIdRequest,
    handleDeletePeliculaByIdRequest
};
 
























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































